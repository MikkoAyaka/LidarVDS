<!-- 该资源字典中包含对原生组件或引入组件的一些功能改进，如需新增组件请见CustomController.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <Style x:Key="NavButton" TargetType="RadioButton" BasedOn="{StaticResource ButtonBaseBaseStyle}">
        <Setter Property="Margin" Value="20"></Setter>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualRadius0}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource RegionBrush}" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="0" />
        <Setter Property="hc:VisualElement.HighlightBrush" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <Border Name="BorderHighlight" BorderThickness="0,0,0,2" BorderBrush="Transparent">
                            <StackPanel Orientation="Horizontal"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}">
                                <Path x:Name="PathMain"
                                      Height="{Binding Path=(hc:IconElement.Height),RelativeSource={RelativeSource TemplatedParent}}"
                                      Width="{Binding Path=(hc:IconElement.Width),RelativeSource={RelativeSource TemplatedParent}}"
                                      Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="True" Stretch="Uniform"
                                      Data="{TemplateBinding hc:IconElement.Geometry}" />
                                <ContentPresenter x:Name="ContentPresenterMain" RecognizesAccessKey="True"
                                                  VerticalAlignment="Center" Margin="6,0,0,0"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ContentPresenterMain" />
                        </Trigger>
                        <Trigger Property="hc:IconElement.Geometry" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PathMain" />
                            <Setter Property="Margin" Value="0" TargetName="ContentPresenterMain" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
                            <Setter Property="BorderBrush"
                                    Value="{Binding Path=(hc:VisualElement.HighlightBrush),RelativeSource={RelativeSource TemplatedParent}}"
                                    TargetName="BorderHighlight" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value=".9" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>